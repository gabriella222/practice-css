.container{
  background: #e7e7e7;
  width: 200px;
  height: 200px;
  padding: 30px;
}

.item{
  margin-bottom: 20px;
  background: #F88146;
  /* width: 25px;
  height: 25px; */
  color:white;
}

/* #item1{
  padding-top:10px;
} */

/**Obs -> Alguns itens irá funcionar se o container possuir espaço para isso**/

/**Direção do flex - Aplicado no container**/

/**Flex Row**/
.flex{
  display:flex;
  gap: 10px;
}

/**Flex Row - Reverse**/
.flex-reverse{
  display:flex;
  flex-direction: row-reverse;
}

/**Flex Column**/
.flex-column{
  display:flex;
  flex-direction: column;
}

/**Flex Column - Reverse**/
.flex-column-reverse{
  display:flex;
  flex-direction: column-reverse;
  
}

/**Quebra de linha - WRAP - NOWRAP- Aplicado no container**/
.wrap{
  flex-wrap: wrap;
}

/**Flex Flow - Atalho para Direção e Quebra de linha**/
.flex-flow{
 flex-flow: row wrap;
}

/**Alinhamentos**/

/**justify-content - alinha os item no eixo Y - horizontal / esquerda - direita - centro**/
/**propriedades: center / flex-start / flex-start / space-between / space-around **/

.flex-justify-content{
  justify-content: start;
}

/**align-items - alinha conforme o eixo do container - pra cima - baixo - center **/
/**propriedades: strech -> cresçam igualmente / center /flex-start / flex-start / baseline -> se baseia na fonte da primeira letra **/
.flex-align-items{
 align-items: start;
}

/**align-content -
 
 1 - Funciona somente se possuir mais de uma linha com itens
 2 - O flex-wrap precisa ser wrap
 3 - O container precisa ter espaço sobrando em altura para que as alterações sejam visualizaveis

**/
/**propriedades: strech /center / flex-start / flex-start / space-between / space-around **/
.flex-align-content{
  align-content: center;
}


/**FlexItems - Aplicado aos items filhos**/

/**flexgrow - faz com que os items cresçam proporcionamente, ou também ao definir itens com difrentes flex-grow ele crescera duas vezes o tamanho original
 1 - Flexgrow respeita o tamanho do texto
 2- Caso aplicado em todos os items filhos, todos terão o mesmo tamanho, caso seja o mesmo texto

**/

.item-6{
  flex-grow: 1;
}

.item-10{
  flex-grow:2;
}

/**
flexbasis - 
 determina um tamanho X, para que o elemento cresça
**/
.flex-basis{
  flex-basis:0;
}

/**
order - ordenação dos elementos filhos
**/
.order{
  order: -1;
}
.order-3{
  order: 3;
}

/**
 align-self - alinha o próprio item, não afetando os demais
**/

.align-self-end{
  align-self: end;
}

.align-self-center{
  align-self: center;
}